// Mocks generated by Mockito 5.4.4 from annotations
// in rzr_erp_weather_app/test/weather/weather_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i4;
import 'package:geolocator/geolocator.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:rzr_erp_weather_app/feature/weather/data/weather_remote_datasource.dart'
    as _i2;
import 'package:rzr_erp_weather_app/feature/weather/data/weather_repository.dart'
    as _i5;
import 'package:rzr_erp_weather_app/tools/failure.dart' as _i7;
import 'package:rzr_erp_weather_app/tools/success.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeIWeatherRemoteDatasource_0 extends _i1.SmartFake
    implements _i2.IWeatherRemoteDatasource {
  _FakeIWeatherRemoteDatasource_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeolocatorPlatform_1 extends _i1.SmartFake
    implements _i3.GeolocatorPlatform {
  _FakeGeolocatorPlatform_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_2<L, R> extends _i1.SmartFake implements _i4.Either<L, R> {
  _FakeEither_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WeatherRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockWeatherRepository extends _i1.Mock implements _i5.WeatherRepository {
  @override
  _i2.IWeatherRemoteDatasource get remoteDS => (super.noSuchMethod(
        Invocation.getter(#remoteDS),
        returnValue: _FakeIWeatherRemoteDatasource_0(
          this,
          Invocation.getter(#remoteDS),
        ),
        returnValueForMissingStub: _FakeIWeatherRemoteDatasource_0(
          this,
          Invocation.getter(#remoteDS),
        ),
      ) as _i2.IWeatherRemoteDatasource);

  @override
  _i3.GeolocatorPlatform get geoLocator => (super.noSuchMethod(
        Invocation.getter(#geoLocator),
        returnValue: _FakeGeolocatorPlatform_1(
          this,
          Invocation.getter(#geoLocator),
        ),
        returnValueForMissingStub: _FakeGeolocatorPlatform_1(
          this,
          Invocation.getter(#geoLocator),
        ),
      ) as _i3.GeolocatorPlatform);

  @override
  _i6.Future<_i4.Either<_i7.Failure, _i8.Success>> getWeatherData() =>
      (super.noSuchMethod(
        Invocation.method(
          #getWeatherData,
          [],
        ),
        returnValue: _i6.Future<_i4.Either<_i7.Failure, _i8.Success>>.value(
            _FakeEither_2<_i7.Failure, _i8.Success>(
          this,
          Invocation.method(
            #getWeatherData,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i6.Future<_i4.Either<_i7.Failure, _i8.Success>>.value(
                _FakeEither_2<_i7.Failure, _i8.Success>(
          this,
          Invocation.method(
            #getWeatherData,
            [],
          ),
        )),
      ) as _i6.Future<_i4.Either<_i7.Failure, _i8.Success>>);
}
